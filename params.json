{"name":"Db-preservation-toolkit","tagline":"Database Preservation Toolkit","body":"Database Preservation Toolkit\r\n=============================\r\n\r\nThe Database Preservation Toolkit allows conversion between Database formats, including connection to live systems, for purposes of digitally preserve databases. The toolkit allows conversion of live or backed-up databases into preservation formats such as DBML, and XML format created for the purpose of database preservation. The toolkit also allows conversion of the preservation format into live systems to allow the full functionality of databases. For example, it supports a specialized export into MySQL, optimized for PhpMyAdmin, so the database can fully be experimented using a web interface.\r\n\r\n\r\n## How to build from source\r\n\r\n1. Download the [latest stable release](https://github.com/keeps/db-preservation-toolkit/releases).\r\n2. Unzip and open the folder on a command-line terminal\r\n3. Build with Maven\r\n\r\n```bash\r\n$ mvn clean package\r\n```\r\n\r\nBinaries will be on the `target` folder\r\n\r\n## Download pre-compiled version\r\n\r\nBinaries with all dependencies included:\r\n* [db-preservation-toolkit-1.0.0-jar-with-dependencies.jar](https://keeps.github.io/db-preservation-toolkit/releases/db-preservation-toolkit-1.0.0-jar-with-dependencies.jar)\r\n\r\n## How to use\r\n\r\nTo use the program, open a command-line and try out the following command:\r\n\r\n```bash\r\n$ java -jar db-preservation-toolkit-1.0.0-jar-with-dependencies.jar \r\nSynopsys: java -jar roda-common-convert-db.jar -i IMPORT_MODULE [options...] -o EXPORT_MODULE [options...]\r\nAvailable import modules:\r\n\tSQLServerJDBC serverName [port|instance] database username password useIntegratedSecurity encrypt\r\n\tPostgreSQLJDBC hostName database [port] username password encrypt\r\n\tMySQLJDBC hostName [port] database username password\r\n\tOracle8i hostName port database username password <- untested!\r\n\tMSAccess database.mdb\r\n\tODBC source [username password]\r\n\tDBML baseDir\r\nAvailable export modules:\r\n\tSQLServerJDBC serverName [port|instance] database username password useIntegratedSecurity encrypt\r\n\tPostgreSQLJDBC hostName database [port] username password encrypt\r\n\tMySQLJDBC hostName [port] database username password\r\n\tPhpMyAdmin hostName [port] database username password\r\n\tDBML baseDir\r\n\tPostgreSQLFile sqlFile <- SQL file optimized for PostgreSQL\r\n\tMySQLFile sqlFile <- SQL file optimized for MySQL\r\n\tSQLServerFile sqlFile <- SQL file optimized for SQL Server\r\n\tGenericSQLFile sqlFile <- generic SQL file\r\n```\r\n\r\nYou have to select an input and an output module, providing for each its configuration.\r\n\r\n\r\nFor example, if you want to connect to a live MySQL database and export its content to DBML format, you can use the following command.\r\n\r\n```\r\n$ java -jar db-preservation-toolkit-1.0.0-jar-with-dependencies.jar \\\r\n-i MySQLJDBC localhost example_db username p4ssw0rd \\\r\n-o DBML example_db_dbml_export\r\n```\r\n","google":"UA-42276300-3","note":"Don't delete this file! It's used internally to help with page regeneration."}